name: CI/CD Pipeline

on:
  workflow_dispatch: 

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: my_database
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3.0' # Update to your Ruby version

      - name: Install dependencies
        run: |
          gem install bundler
          bundle install

      - name: Print environment variables
        run: env

      - name: Print working directory
        run: pwd

      - name: List files in root directory
        run: ls -la

      - name: List files in config directory
        run: ls -la config

      - name: Check Ruby version
        run: ruby -v

      - name: Check Bundler version
        run: bundler -v

      - name: Set up database
        run: |
          cp config/database.yml.ci config/database.yml
          bin/rails db:create db:schema:load
        env:
          RAILS_ENV: test

      - name: Debug database configuration
        run: cat config/database.yml

      - name: Run tests
        run: bin/rails test
        env:
          RAILS_ENV: test

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t myapp:latest .
          docker tag myapp:latest ${{ secrets.DOCKER_USERNAME }}/myapp:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/myapp:latest

      - name: Deploy to Production Server
        run: ssh user@server 'cd /path/to/app && docker-compose down && docker-compose pull && docker-compose up -d'
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
